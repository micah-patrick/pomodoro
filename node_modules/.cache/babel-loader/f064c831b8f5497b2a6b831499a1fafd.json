{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Micah\\\\Thinkful\\\\qualified-challenges\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\Session.js\";\nimport React from \"react\";\nimport { secondsToDuration } from \"../utils/duration\";\nimport ProgressBar from \"./ProgressBar\";\n\nfunction Session({\n  state\n}) {\n  function sessionTitle() {\n    if (state.isSessionFocus) {\n      return \"Focusing for \" + secondsToDuration(state.focusDuration) + \" minutes\";\n    } else {\n      return \"On Break for \" + secondsToDuration(state.breakDuration) + \" minutes\";\n    }\n  }\n  /* TODO: This area should show only when a focus or break session is running or pauses */\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, sessionTitle()), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, secondsToDuration(state.remainingSeconds), \" remaining\"))), /*#__PURE__*/React.createElement(ProgressBar, {\n    state: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default Session;","map":{"version":3,"sources":["C:/Users/Micah/Thinkful/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Session.js"],"names":["React","secondsToDuration","ProgressBar","Session","state","sessionTitle","isSessionFocus","focusDuration","breakDuration","remainingSeconds"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,SAASC,OAAT,CAAiB;AAACC,EAAAA;AAAD,CAAjB,EAAyB;AAErB,WAASC,YAAT,GAAwB;AACpB,QAAGD,KAAK,CAACE,cAAT,EAAyB;AACvB,aAAO,kBAAkBL,iBAAiB,CAACG,KAAK,CAACG,aAAP,CAAnC,GAA2D,UAAlE;AACD,KAFD,MAEO;AACL,aAAO,kBAAkBN,iBAAiB,CAACG,KAAK,CAACI,aAAP,CAAnC,GAA2D,UAAlE;AACD;AACF;AACP;;;AAEI,sBACI,uDACA;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAI,mBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCH,YAAY,EAA7C,CAFJ,eAII;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,mBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCJ,iBAAiB,CAACG,KAAK,CAACK,gBAAP,CADlB,eAJJ,CADJ,CADA,eAWI,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAEL,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,CADJ;AAgBH;;AAED,eAAeD,OAAf","sourcesContent":["import React from \"react\";\r\nimport { secondsToDuration } from \"../utils/duration\";\r\nimport ProgressBar from \"./ProgressBar\";\r\n\r\nfunction Session({state}){\r\n\r\n    function sessionTitle() {\r\n        if(state.isSessionFocus) {\r\n          return \"Focusing for \" + secondsToDuration(state.focusDuration) + \" minutes\";\r\n        } else {\r\n          return \"On Break for \" + secondsToDuration(state.breakDuration) + \" minutes\";\r\n        }\r\n      }\r\n/* TODO: This area should show only when a focus or break session is running or pauses */\r\n      \r\n    return (\r\n        <>\r\n        <div className=\"row mb-2\">\r\n            <div className=\"col\">\r\n                {/* TO-DO: Update message below to include current session (Focusing or On Break) and total duration */}\r\n                <h2 data-testid=\"session-title\">{sessionTitle()}</h2>\r\n                {/* TO-DO: Update message below to include time remaining in the current session */}\r\n                <p className=\"lead\" data-testid=\"session-sub-title\">\r\n                {secondsToDuration(state.remainingSeconds)} remaining\r\n                </p>\r\n            </div>\r\n            </div>\r\n            <ProgressBar state={state} />\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Session;\r\n\r\n\r\n            "]},"metadata":{},"sourceType":"module"}