{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Micah\\\\Thinkful\\\\qualified-challenges\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\Session.js\";\nimport React from \"react\";\n\nfunction Session(durations, isSessionFocus, remainingSeconds) {\n  /* TODO: This area should show only when a focus or break session is running or pauses */\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }\n  }, sessionTitle()), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }\n  }, secondsToDuration(remainingSeconds), \" remaining\"))), /*#__PURE__*/React.createElement(ProgressBar, {\n    durations: durations,\n    isSessionFocus: isSessionFocus,\n    remainingSeconds: remainingSeconds,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default Session;","map":{"version":3,"sources":["C:/Users/Micah/Thinkful/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Session.js"],"names":["React","Session","durations","isSessionFocus","remainingSeconds","sessionTitle","secondsToDuration"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,OAAT,CAAiBC,SAAjB,EAA4BC,cAA5B,EAA4CC,gBAA5C,EAA6D;AAE7D;AAEI,sBACI,uDACA;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAI,mBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCC,YAAY,EAA7C,CAFJ,eAII;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,mBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCC,iBAAiB,CAACF,gBAAD,CADlB,eAJJ,CADJ,CADA,eAWI,oBAAC,WAAD;AACA,IAAA,SAAS,EAAEF,SADX;AAEA,IAAA,cAAc,EAAEC,cAFhB;AAGA,IAAA,gBAAgB,EAAEC,gBAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,CADJ;AAmBH;;AAED,eAAeH,OAAf","sourcesContent":["import React from \"react\";\r\n\r\nfunction Session(durations, isSessionFocus, remainingSeconds){\r\n\r\n/* TODO: This area should show only when a focus or break session is running or pauses */\r\n      \r\n    return (\r\n        <>\r\n        <div className=\"row mb-2\">\r\n            <div className=\"col\">\r\n                {/* TO-DO: Update message below to include current session (Focusing or On Break) and total duration */}\r\n                <h2 data-testid=\"session-title\">{sessionTitle()}</h2>\r\n                {/* TO-DO: Update message below to include time remaining in the current session */}\r\n                <p className=\"lead\" data-testid=\"session-sub-title\">\r\n                {secondsToDuration(remainingSeconds)} remaining\r\n                </p>\r\n            </div>\r\n            </div>\r\n            <ProgressBar \r\n            durations={durations} \r\n            isSessionFocus={isSessionFocus} \r\n            remainingSeconds={remainingSeconds} />\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Session;\r\n\r\n\r\n            "]},"metadata":{},"sourceType":"module"}