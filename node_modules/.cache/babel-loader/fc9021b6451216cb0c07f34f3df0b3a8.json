{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Micah\\\\Thinkful\\\\qualified-challenges\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\nimport Durations from \"./Durations\";\nimport Duration from \"./Duration\";\n\nfunction Pomodoro() {\n  // .............\n  // initial state values\n  // .............\n  const initialDurationStates = {\n    focusDuration: 25 * 60,\n    breakDuration: 5 * 60\n  }; // .............\n  // State Declarations\n  // .............\n\n  const [durations, setDurations] = useState({ ...initialDurationStates\n  });\n  const [isSessionFocus, setIsSessionFocus] = useState(true);\n  const [remainingSeconds, setRemainingSeconds] = useState(initialDurationStates.focusDuration);\n  const [isTimerRunning, setIsTimerRunning] = useState(false); // .............\n  // functions and helper functions\n  // .............\n\n  useInterval(() => {\n    // ToDo: Implement what should happen when the timer is running\n    setRemainingSeconds(current => current - 1);\n    console.log(\"is timer running: \" + isTimerRunning);\n    console.log(remainingSeconds);\n  }, isTimerRunning ? 1000 : null);\n\n  function playPause() {\n    setIsTimerRunning(prevState => !prevState);\n  } // .............\n  // Handler functions\n  // .............\n\n\n  function updateRemainingFromDuration(duration) {\n    setRemainingSeconds(duration);\n  }\n\n  const focusDecreaseHandler = () => {\n    if (!isTimerRunning) {\n      setDurations({ ...durations,\n        focusDuration: Math.max(300, durations.focusDuration - 300)\n      });\n      isSessionFocus && updateRemainingFromDuration(durations.focusDuration - 300);\n    }\n\n    ;\n  };\n\n  const focusIncreaseHandler = () => {\n    if (!isTimerRunning) {\n      setDurations({ ...durations,\n        focusDuration: Math.min(3600, durations.focusDuration + 300)\n      });\n      isSessionFocus && updateRemainingFromDuration(durations.focusDuration + 300);\n    }\n\n    ;\n  };\n\n  const breakDecreaseHandler = () => {\n    if (!isTimerRunning) {\n      setDurations({ ...durations,\n        breakDuration: Math.max(60, durations.breakDuration - 60)\n      });\n      !isSessionFocus && updateRemainingFromDuration(durations.focusDuration - 60);\n    }\n\n    ;\n  };\n\n  const breakIncreaseHandler = () => {\n    if (!isTimerRunning) {\n      setDurations({ ...durations,\n        breakDuration: Math.min(900, durations.breakDuration + 60)\n      });\n      !isSessionFocus && updateRemainingFromDuration(durations.focusDuration + 60);\n    }\n\n    ;\n  };\n\n  const durationHandler = {\n    focus: {\n      decrease: focusDecreaseHandler,\n      increase: focusIncreaseHandler\n    },\n    break: {\n      decrease: breakDecreaseHandler,\n      increase: breakIncreaseHandler\n    }\n  }; // console.log(\"is timer running: \" + isTimerRunning);\n  // .............\n  // Render\n  // .............\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Durations, {\n    durations: durations,\n    durationHandler: durationHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group btn-group-lg mb-2\",\n    role: \"group\",\n    \"aria-label\": \"Timer controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    \"data-testid\": \"play-pause\",\n    title: \"Start or pause timer\",\n    onClick: playPause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames({\n      oi: true,\n      \"oi-media-play\": !isTimerRunning,\n      \"oi-media-pause\": isTimerRunning\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    title: \"Stop the session\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-media-stop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, \"Focusing for 25:00 minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, secondsToDuration(remainingSeconds), \" remaining\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": \"0\" // TODO: Increase aria-valuenow as elapsed time increases\n    ,\n    style: {\n      width: \"0%\"\n    } // TODO: Increase width % as elapsed time increases\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 15\n    }\n  }))))));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["C:/Users/Micah/Thinkful/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useState","classNames","useInterval","minutesToDuration","secondsToDuration","Durations","Duration","Pomodoro","initialDurationStates","focusDuration","breakDuration","durations","setDurations","isSessionFocus","setIsSessionFocus","remainingSeconds","setRemainingSeconds","isTimerRunning","setIsTimerRunning","current","console","log","playPause","prevState","updateRemainingFromDuration","duration","focusDecreaseHandler","Math","max","focusIncreaseHandler","min","breakDecreaseHandler","breakIncreaseHandler","durationHandler","focus","decrease","increase","break","oi","height","width"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\nimport Durations from \"./Durations\";\nimport Duration from \"./Duration\";\n\nfunction Pomodoro() {\n// .............\n// initial state values\n// .............\n      const initialDurationStates = {\n        focusDuration: 25 * 60,\n        breakDuration: 5 * 60,\n      }\n// .............\n// State Declarations\n// .............\nconst [durations, setDurations] = useState({...initialDurationStates})\nconst [isSessionFocus, setIsSessionFocus] = useState(true);\nconst [remainingSeconds, setRemainingSeconds] = useState(initialDurationStates.focusDuration);\nconst [isTimerRunning, setIsTimerRunning] = useState(false);\n\n// .............\n// functions and helper functions\n// .............\n\nuseInterval(\n  () => {\n    // ToDo: Implement what should happen when the timer is running\n\n    setRemainingSeconds((current) => current - 1);\n    console.log(\"is timer running: \" + isTimerRunning);\n    console.log(remainingSeconds);\n  },\n  isTimerRunning ? 1000 : null\n  );\n  \n  function playPause() {\n    setIsTimerRunning((prevState) => !prevState);\n  }\n  \n// .............\n// Handler functions\n// .............\n  function updateRemainingFromDuration(duration){\n    setRemainingSeconds(duration)\n  }\n\n  const focusDecreaseHandler = () => {\n    if (!isTimerRunning) {  \n      setDurations({\n        ...durations,\n        focusDuration: Math.max(300, durations.focusDuration - 300),\n      });\n      isSessionFocus && updateRemainingFromDuration(durations.focusDuration - 300);\n    };\n  }\n  const focusIncreaseHandler = () => {\n    if (!isTimerRunning) {  \n      setDurations({\n        ...durations,\n        focusDuration: Math.min(3600, durations.focusDuration + 300),\n      });\n      isSessionFocus && updateRemainingFromDuration(durations.focusDuration + 300);\n    };\n  }\n  const breakDecreaseHandler = () => {\n    if (!isTimerRunning) {  \n      setDurations({\n        ...durations,\n        breakDuration: Math.max(60, durations.breakDuration - 60),\n      });\n      !isSessionFocus && updateRemainingFromDuration(durations.focusDuration - 60);\n    };\n  }\n  const breakIncreaseHandler = () => {\n    if (!isTimerRunning) {  \n      setDurations({\n        ...durations,\n        breakDuration: Math.min(900, durations.breakDuration + 60),\n      });\n      !isSessionFocus && updateRemainingFromDuration(durations.focusDuration + 60);\n    };\n  }\n\n  const durationHandler = {\n    focus: {decrease: focusDecreaseHandler, increase: focusIncreaseHandler},\n    break: {decrease: breakDecreaseHandler, increase: breakIncreaseHandler}\n  }\n\n// console.log(\"is timer running: \" + isTimerRunning);\n\n// .............\n// Render\n// .............\n\n  return (\n    <div className=\"pomodoro\">\n      <Durations durations={durations} durationHandler={durationHandler} />\n      <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              onClick={playPause}\n            >\n              <span\n                className={classNames({\n                  oi: true,\n                  \"oi-media-play\": !isTimerRunning,\n                  \"oi-media-pause\": isTimerRunning,\n                })}\n              />\n            </button>\n            {/* TODO: Implement stopping the current focus or break session and disable when there is no active session */}\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              title=\"Stop the session\"\n            >\n              <span className=\"oi oi-media-stop\" />\n            </button>\n          </div>\n        </div>\n      </div>\n      <div>\n        {/* TODO: This area should show only when a focus or break session is running or pauses */}\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            {/* TODO: Update message below to include current session (Focusing or On Break) and total duration */}\n            <h2 data-testid=\"session-title\">Focusing for 25:00 minutes</h2>\n            {/* TODO: Update message below to include time remaining in the current session */}\n            <p className=\"lead\" data-testid=\"session-sub-title\">\n              {secondsToDuration(remainingSeconds)} remaining\n            </p>\n          </div>\n        </div>\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            <div className=\"progress\" style={{ height: \"20px\" }}>\n              <div\n                className=\"progress-bar\"\n                role=\"progressbar\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                aria-valuenow=\"0\" // TODO: Increase aria-valuenow as elapsed time increases\n                style={{ width: \"0%\" }} // TODO: Increase width % as elapsed time increases\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}