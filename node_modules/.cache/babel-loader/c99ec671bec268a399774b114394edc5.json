{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Micah\\\\Thinkful\\\\qualified-challenges\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport useInterval from \"../utils/useInterval\";\nimport FocusDuration from \"./FocusDuration\";\nimport BreakDuration from \"./BreakDuration\";\nimport Session from \"./Session\";\nimport StartStop from \"./StartStop\";\n\nfunction Pomodoro() {\n  // .............\n  // initial state values\n  // .............\n  const initialStates = {\n    //-----Testing Initial Values-----\n    //-----Test Values-----\n    focusDuration: 5,\n    breakDuration: 8,\n    remainingSeconds: 5,\n    //-----Real Values-----\n    // focusDuration: 25 * 60,\n    // breakDuration: 5 * 60,\n    // remainingSeconds: 25 * 60,\n    //-----/Testing Initial Values-----\n    isTimerRunning: false,\n    isTimerStarted: false,\n    isSessionFocus: true\n  }; // .............\n  // State Declarations\n  // .............\n\n  const [state, setState] = useState({ ...initialStates\n  });\n  const alarm = new Audio(`https://bigsoundbank.com/UPLOAD/mp3/1482.mp3`); // .............\n  // functions and helper functions\n  // .............\n\n  useInterval(() => {\n    // To-Do: Implement what should happen when the timer is running\n    setState(current => ({ ...current,\n      remainingSeconds: current.remainingSeconds - 1\n    }));\n    state.remainingSeconds === 0 && switchSessions();\n  }, state.isTimerRunning ? 1000 : null);\n\n  function playPause() {\n    !state.isTimerStarted && setState(current => ({ ...current,\n      remainingSeconds: current.focusDuration\n    }));\n    setState(current => ({ ...current,\n      isTimerRunning: !current.isTimerRunning\n    }));\n    setState(current => ({ ...current,\n      isTimerStarted: true\n    }));\n  }\n\n  function switchSessions() {\n    alarm.play();\n    setState(current => ({ ...current,\n      isSessionFocus: !current.isSessionFocus\n    }));\n    state.isSessionFocus ? setState(current => ({ ...current,\n      remainingSeconds: current.breakDuration\n    })) : setState(current => ({ ...current,\n      remainingSeconds: current.focusDuration\n    }));\n  } // .............\n  // Handler functions\n  // .............\n\n\n  const stopHandler = () => {\n    setState(current => ({ ...initialStates,\n      focusDuration: current.focusDuration,\n      breakDuration: current.breakDuration,\n      remainingSeconds: current.focusDuration\n    }));\n  };\n\n  const focusDecreaseHandler = () => {\n    const newDuration = Math.max(300, state.focusDuration - 300);\n    setState(current => ({ ...current,\n      focusDuration: newDuration\n    }));\n  };\n\n  const focusIncreaseHandler = () => {\n    const newDuration = Math.min(3600, state.focusDuration + 300);\n    setState(current => ({ ...current,\n      focusDuration: newDuration\n    }));\n  };\n\n  const breakDecreaseHandler = () => {\n    const newDuration = Math.max(60, state.breakDuration - 60);\n    setState(current => ({ ...current,\n      breakDuration: newDuration\n    }));\n  };\n\n  const breakIncreaseHandler = () => {\n    const newDuration = Math.min(900, state.breakDuration + 60);\n    setState(current => ({ ...current,\n      breakDuration: newDuration\n    }));\n  }; // const durationHandler = {\n  //   focus: {decrease: focusDecreaseHandler, increase: focusIncreaseHandler},\n  //   break: {decrease: breakDecreaseHandler, increase: breakIncreaseHandler}\n  // }\n\n\n  const durationHandler = event => {\n    const target = event.target.type === \"button\" ? event.target : event.target.parentNode;\n    const adjuster = target.getAttribute(\"adjuster\");\n    console.log(adjuster);\n    let newDuration = 0;\n    let focusOrBreak = \"\";\n\n    switch (adjuster) {\n      case \"decreaseFocus\":\n        newDuration = Math.max(300, state.focusDuration - 300);\n        focusOrBreak = \"focusDuration\";\n        break;\n\n      case \"increaseFocus\":\n        newDuration = Math.min(3600, state.focusDuration + 300);\n        focusOrBreak = \"focusDuration\";\n        break;\n\n      case \"decreaseBreak\":\n        newDuration = Math.max(60, state.breakDuration - 60);\n        focusOrBreak = \"breakDuration\";\n        break;\n\n      case \"increaseBreak\":\n        newDuration = Math.min(900, state.breakDuration + 60);\n        focusOrBreak = \"breakDuration\";\n    }\n\n    console.log(newDuration);\n    setState(current => ({ ...current,\n      [focusOrBreak]: newDuration\n    }));\n  }; // Only Render the session if the timer started\n\n\n  const displaySession = state.isTimerStarted && /*#__PURE__*/React.createElement(Session, {\n    state: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 5\n    }\n  }); // .............\n  // Render\n  // .............\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FocusDuration, {\n    state: state,\n    durationHandler: durationHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(BreakDuration, {\n    state: state,\n    durationHandler: durationHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(StartStop, {\n    state: state,\n    playPause: playPause,\n    stopHandler: stopHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }\n  }), displaySession);\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["C:/Users/Micah/Thinkful/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useState","useInterval","FocusDuration","BreakDuration","Session","StartStop","Pomodoro","initialStates","focusDuration","breakDuration","remainingSeconds","isTimerRunning","isTimerStarted","isSessionFocus","state","setState","alarm","Audio","current","switchSessions","playPause","play","stopHandler","focusDecreaseHandler","newDuration","Math","max","focusIncreaseHandler","min","breakDecreaseHandler","breakIncreaseHandler","durationHandler","event","target","type","parentNode","adjuster","getAttribute","console","log","focusOrBreak","displaySession"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport useInterval from \"../utils/useInterval\";\nimport FocusDuration from \"./FocusDuration\";\nimport BreakDuration from \"./BreakDuration\";\nimport Session from \"./Session\";\nimport StartStop from \"./StartStop\";\n\n\nfunction Pomodoro() {\n// .............\n// initial state values\n// .............\n      const initialStates = {\n        //-----Testing Initial Values-----\n        //-----Test Values-----\n        focusDuration: 5,\n        breakDuration: 8,\n        remainingSeconds: 5,\n        //-----Real Values-----\n        // focusDuration: 25 * 60,\n        // breakDuration: 5 * 60,\n        // remainingSeconds: 25 * 60,\n        //-----/Testing Initial Values-----\n        isTimerRunning: false,\n        isTimerStarted: false,\n        isSessionFocus: true,\n      }\n\n// .............\n// State Declarations\n// .............\nconst [state, setState] = useState({...initialStates})\nconst alarm = new Audio(`https://bigsoundbank.com/UPLOAD/mp3/1482.mp3`);\n\n// .............\n// functions and helper functions\n// .............\n\nuseInterval(\n  () => {\n    // To-Do: Implement what should happen when the timer is running\n    setState((current) => ({...current, remainingSeconds: current.remainingSeconds -1}));\n    state.remainingSeconds === 0 && switchSessions();\n  },\n  state.isTimerRunning ? 1000 : null\n  );\n  \n  function playPause() {\n    !state.isTimerStarted && setState((current) => ({...current, remainingSeconds: current.focusDuration}));\n    setState((current) => ({...current, isTimerRunning: !current.isTimerRunning}));\n    setState((current) => ({...current, isTimerStarted: true}));\n  \n  }\n  function switchSessions(){\n    alarm.play();\n    setState((current) => ({...current, isSessionFocus: !current.isSessionFocus}));\n    state.isSessionFocus \n      ? setState((current) => ({...current, remainingSeconds: current.breakDuration})) \n      : setState((current) => ({...current, remainingSeconds: current.focusDuration})); \n    \n  }\n\n\n\n\n// .............\n// Handler functions\n// .............\n\n  const stopHandler = () => {\n    setState((current) => ({\n      ...initialStates,\n      focusDuration: current.focusDuration,\n      breakDuration: current.breakDuration,\n      remainingSeconds: current.focusDuration,\n    }));\n  }\n\n  const focusDecreaseHandler = () => {\n      const newDuration = Math.max(300, state.focusDuration - 300); \n      setState((current) => ({\n        ...current,\n        focusDuration: newDuration,\n      }));\n  }\n  const focusIncreaseHandler = () => {\n      const newDuration = Math.min(3600, state.focusDuration + 300); \n      setState((current) => ({\n        ...current,\n        focusDuration: newDuration,\n      }));\n  }\n  const breakDecreaseHandler = () => {\n      const newDuration = Math.max(60, state.breakDuration - 60)\n      setState((current) => ({\n        ...current,\n        breakDuration: newDuration,\n      }));\n  }\n  const breakIncreaseHandler = () => {\n      const newDuration =  Math.min(900, state.breakDuration + 60); \n      setState((current) => ({\n        ...current,\n        breakDuration: newDuration,\n      }));\n  }\n\n  // const durationHandler = {\n  //   focus: {decrease: focusDecreaseHandler, increase: focusIncreaseHandler},\n  //   break: {decrease: breakDecreaseHandler, increase: breakIncreaseHandler}\n  // }\n  \n  \n  const durationHandler = (event) => {\n    const target = event.target.type === \"button\" ? event.target : event.target.parentNode;\n    const adjuster = target.getAttribute(\"adjuster\"); \n    console.log(adjuster);\n    let newDuration = 0;\n    let focusOrBreak = \"\";\n    switch(adjuster) {\n      case \"decreaseFocus\":\n           newDuration = Math.max(300, state.focusDuration - 300);\n           focusOrBreak = \"focusDuration\";\n        break;\n      case \"increaseFocus\":\n           newDuration = Math.min(3600, state.focusDuration + 300);\n           focusOrBreak = \"focusDuration\";\n        break;\n      case \"decreaseBreak\":\n           newDuration = Math.max(60, state.breakDuration - 60);\n           focusOrBreak = \"breakDuration\";\n        break;\n      case \"increaseBreak\":\n           newDuration =  Math.min(900, state.breakDuration + 60);\n           focusOrBreak = \"breakDuration\";\n        }\n        console.log(newDuration);\n        setState((current) => ({\n          ...current,\n          [focusOrBreak]: newDuration,\n        }));\n  }\n\n  \n// Only Render the session if the timer started\n  const displaySession= state.isTimerStarted && (\n    <Session \n          state={state} \n        />\n  );\n\n\n// .............\n// Render\n// .............\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <FocusDuration \n          state={state} \n          durationHandler={durationHandler} \n        />\n        <BreakDuration \n          state={state} \n          durationHandler={durationHandler} \n        />\n      </div>\n      <StartStop \n        state={state}\n        playPause={playPause}\n        stopHandler={stopHandler}\n      />\n      {displaySession}\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}